version: '3'
services:
  web:
    image: nginx:mainline-alpine
    container_name: web
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./html:/var/www/html
      - ./nginx:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letencrypt
      - ./dhparam:/etc/ssl/certs
    depends_on:
      - app
    networks:
      - app-network

  db:
    image: mariadb:10.4
    container_name: db
    networks:
      - backend
    volumes:
      - ./db-data:/var/lib/mysql
      - ./init:/docker-entrypoint-initdb.d/:ro
      - ./sql:/sql/:ro
    environment:
      - MYSQL_ROOT_PASSWORD=swordfish
      - MYSQL_DATABASE=sessionstore

  app:
    image: node
    container_name: app
    user: "node"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=production
      - THIS_PORT=3000
      - MARIA_HOST=db
      - MARIA_USER=root
      - MARIA_PASSWORD=swordfish
      - MARIA_DBNAME_INSTRUCTORTIPS=instructortips
      - MARIA_DBNAME_TREASUREHUNT=treasurehunt
      - SESSION_HOST=db
      - SESSION_USER=root
      - SESSION_PASSWORD=swordfish
      - SESSION_DBNAME=sessionstore
      - SESSION_SECRET=hotpants
      - INSTRUCTORTIPS_URL=/instructortips/instructortips.html
      - PASSWORD_SALT=quei0Oot
      - EMAIL_USER=hoopla
      - EMAIL_PASSWORD=madeupstuff
    command: "npm start"
    volumes:
      - ./server:/home/node/app
    restart: unless-stopped
    networks:
      - app-network
      - backend


#  certbot:
#    image: certbot/certbot
#    container_name: certbot
#    volumes:
#      - certbot-etc:/etc/letsencrypt
#      - certbot-var:/var/lib/letsencrypt
#      - ./html:/var/www/html
#    depends_on:
#      - web
#    command: certonly --dry-run --staging --webroot --webroot-path=/var/www/html --email aardvark-studios@protonmail.com --agree-tos -d aardvark-studios.com -d www.aardvark-studios.com

volumes:
  certbot-etc:
  certbot-var:

networks:
  app-network:
    driver: bridge
  backend:
    driver: bridge
